# Food Module — Storyboard & Technical Spec (Road-Trip Quest: SD → LA → SF → SEA)
Title: "Food Module — Road-Trip Quest"
Description: "A progressive, gamified learning segment using a coastal road-trip (San Diego → Los Angeles → San Francisco → Seattle) to teach relational database fundamentals through food-themed pitstop tasks."
LearningObjectives:
  - "Understand and implement basic CRUD operations against a relational database."
  - "Design a normalized schema for a food-related domain (dishes, ingredients, join tables)."
  - "Write parameterized queries and avoid SQL injection."
  - "Use transactions to maintain consistency across multi-table updates."
  - "Build and consume RESTful endpoints for create/read/update/delete operations."
  - "Implement client-side UX for creating, editing, and archiving records with accessibility in mind."
  - "Demonstrate soft-delete vs hard-delete and archival strategies."
  - "Interpret aggregated results using GROUP BY, COUNT, SUM and simple analytics queries."
  - "Apply basic indexing and measure performance differences for common queries."

Cities:
  - Name: "San Diego"
    Description: "Start your journey by creating the perfect Baja Bowl with fresh ingredients."
    Challenge: "Master CREATE operations and form validation"
    Analogy: "Like adding ingredients to your bowl, we're adding records to our database"
    Pitstops:
      - Name: "Baja Bowl Creation Station"
        Description: "Build a dish creation form with validation and error handling"
        Activity: "Create form validation for dish creation"
        Hints: ["Use classes or functions", "Include error handling", "Validate required fields", "Add form data methods"]

  - Name: "Los Angeles"
    Description: "Explore the diverse food truck scene and master searching and filtering."
    Challenge: "Master READ operations and advanced filtering"
    Analogy: "Like browsing food trucks, we're querying and filtering database records"
    Pitstops:
      - Name: "Food Truck Filter Hub"
        Description: "Implement search and filter functionality for the dish database"
        Activity: "Build filtering and search capabilities"
        Hints: ["Use array methods", "Add pagination", "Include performance metrics", "Think about indexing"]

  - Name: "San Francisco"
    Description: "Update gourmet recipes at a pop-up restaurant while handling conflicts."
    Challenge: "Master UPDATE operations and transaction handling"
    Analogy: "Like modifying recipes mid-service, we're updating records safely with transactions"
    Pitstops:
      - Name: "Gourmet Recipe Editor"
        Description: "Edit dishes with transaction support and conflict resolution"
        Activity: "Implement transactional updates with conflict handling"
        Hints: ["Use transactions", "Add version checking", "Include rollback functionality", "Add preview system"]

  - Name: "Seattle"
    Description: "Clean up your database while enjoying clam chowder and analyzing your food journey."
    Challenge: "Master DELETE operations and data analytics"
    Analogy: "Like deciding what leftovers to keep, we're managing data lifecycle and analyzing patterns"
    Pitstops:
      - Name: "Clam Chowder Cleanup Center"
        Description: "Implement soft/hard delete and generate analytics reports"
        Activity: "Build deletion system with analytics dashboard"
        Hints: ["Implement soft delete", "Add analytics functions", "Include cascading deletes", "Add confirmation dialogs"]

Storyboard:
  - title: "Opening — Road-Trip Map"
    city: "global"
    goal: "Orient the player visually: show route with SD → LA → SF → SEA markers and a progress/gas XP gauge. 'Start trip' unlocks San Diego."
    ux:
      - "Map SVG with four markers and tooltips"
      - "Progress bar / gas gauge representing XP"
      - "'Start trip' button to fetch the SD manifest"
    tech: "Client route state machine; server returns pitstop config at /api/module/food/manifest; seed data returned on initial load."

  - title: "San Diego — Build the Baja Bowl"
    city: "sd"
    goal: "Learner creates a dish using a form; dish and ingredient records are created with join entries. Reward XP and update pitstop pantry."
    ux:
      - "Create Dish form with accessible fields and photo upload"
      - "Toast notification on success (+50 XP)"
      - "Pantry list showing created dishes for SD"
    tech: "POST /api/dishes creates dish, ingredients, and dish_ingredients in a transaction; server-side validation and file storage (S3/local)."

  - title: "Los Angeles — Food Truck Tasting"
    city: "la"
    goal: "Learner filters and searches dishes, uses Dev Console to see safe sample SQL, and observes index impact."
    ux:
      - "Filter panel (ingredient, min_cal, category) with keyboard support"
      - "Dev Console panel showing parameterized SQL examples"
      - "Paginated list with quick detail drawer"
    tech: "GET /api/dishes supports pagination and filter params; database index demo (ingredient.name) and simulated metrics."

  - title: "San Francisco — Gourmet Pop-Up"
    city: "sf"
    goal: "Learner edits a menu with transactional updates, previews diffs, and resolves concurrent edit conflicts."
    ux:
      - "Edit modal with 'Preview Changes' diff"
      - "Conflict resolution modal when version mismatch occurs"
      - "Clear success/failure feedback for transactions"
    tech: "PUT/PATCH endpoints wrap multi-table updates in transactions; optimistic locking via version column; rollback simulation endpoints for testing."

  - title: "Seattle — Sustainable Cleanup with Clam Chowder"
    city: "sea"
    goal: "Learner archives or hard-deletes the clam chowder, observes cascading effects, and views analytics reports."
    ux:
      - "Archive toggle and archived list in admin view"
      - "Hard delete confirmation modal with cascade warning"
      - "Analytics dashboard with charts and exportable CSV"
    tech: "Soft delete implemented with deleted_at; hard deletes cascade to dish_ingredients; analytics endpoints aggregate data with GROUP BY."

Analytics:
  - "Top ingredients used across all cities (ingredient name, usage_count)."
  - "Average calories by city."
  - "Number of dishes per category (bowl/taco/salad/etc.)."
  - "Total archived vs active dishes (by city)."
  - "Most common pairings (joined ingredient pairs) for advanced analytic example."

AcceptanceCriteria:
  - "San Diego: Created dish is visible in SD pitstop pantry (GET /api/dishes?city=sd)."
  - "Los Angeles: Filter by ingredient and city returns correct results and uses at least one indexed field in the demo."
  - "San Francisco: Transaction rollback behavior is verified with integration tests (failed nested operation leaves DB consistent)."
  - "Seattle: Soft archive hides items from normal lists but they appear in archived admin list; hard delete cascades remove related records."
  - "Secure queries: endpoints use parameterized queries (no SQL injection)."
  - "Accessibility: Forms and controls meet ARIA and keyboard navigation standards; color contrast >= 4.5:1."
  - "Seed data: At least three seeded dishes per city (including clam chowder in Seattle)."
  - "Story/UX copy exists for each pitstop."

TaskChecklist:
  - "DB schema & migrations (dishes, ingredients, dish_ingredients, audit/versioning, deleted_at)"
  - "Seed data for SD, LA, SF, SEA (3+ dishes per city)"
  - "API endpoints: CRUD for dishes, ingredients, analytics endpoints"
  - "Frontend map & pitstop flow with unlocking state"
  - "San Diego: create form + validation"
  - "Los Angeles: filters, pagination, Dev Console"
  - "San Francisco: edit UI, transactions, conflict modal"
  - "Seattle: archive/hard delete UI + analytics dashboard"
  - "Gamification: XP, badges, progress tracking"
  - "Testing: unit tests, integration tests for transactions and rollback"
  - "Accessibility audit and remediation"
  - "Documentation & teacher guide"

Seeds:
  - "San Diego":
      - "Baja Bowl"
      - "Fish Tacos (Baja-style)"
      - "California Burrito"
  - "Los Angeles":
      - "Korean BBQ Bowl"
      - "Street Al Pastor Tacos"
      - "Food Truck Special"
  - "San Francisco":
      - "Clam Chowder (pop-up style)"
      - "Mission Burrito"
      - "Gourmet Cioppino"
  - "Seattle":
      - "Pike Place Clam Chowder in Sourdough Bread Bowl"
      - "Fresh Salmon Plate"
      - "Dungeness Crab Roll"